ditch_the_axes
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "blue", high = "yellow") +
ditch_the_axes
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "yellow", high = "red") +
ditch_the_axes
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "red") +
ditch_the_axes
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "yellow") +
ditch_the_axes
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "red") +
ditch_the_axes
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "dark blue") +
ditch_the_axes
listings <- read.csv("data/listings-summarized.csv")
neighbourhoods <- read.csv("data/neighbourhoods.csv")
all_listings <-read.csv("data/listings.csv")
ottawawards <- read_sf("data/Wards.shp")
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "white")
)
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Orléans"] <- "Orleans"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "West Carleton – March"] <- "West Carleton-March"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Stittsville"] <- "Stittsville-Kanata West"
ottawawards <- ottawawards %>%
left_join(count(listings,neighbourhood),c("WARD_NAME_"="neighbourhood"))
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "dark blue") +
ditch_the_axes
df_listing_sum <- listings %>%
group_by(neighbourhood, room_type) %>%
summarize(sum = n()) %>%
group_by(neighbourhood) %>%
mutate(total=sum(sum)) %>%
mutate(percent=total/nrow(listings))
df_listing_sum %>%
ggplot(aes(x=reorder(neighbourhood,total),y=sum,fill=room_type)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
p <- listings %>%
plot_mapbox(lat = ~latitude, lon = ~longitude,
split = ~room_type, size=2,
mode = 'scattermapbox', hoverinfo="price") %>%
layout(mapbox = list(zoom = 9,
center = list(lat = ~median(latitude),
lon = ~median(longitude))))
p
p <- listings %>%
plot_mapbox(lat = ~latitude, lon = ~longitude,
split = ~room_type, size=2,
mode = 'scattermapbox', hoverinfo="price") %>%
layout(mapbox = list(zoom = 9,
center = list(lat = ~median(latitude),
lon = ~median(longitude)))) %>%
plot_mapbox(ottawawards)
plot_mapbox(ottawawards)
listings <- read.csv("data/listings-summarized.csv")
neighbourhoods <- read.csv("data/neighbourhoods.csv")
all_listings <-read.csv("data/listings.csv")
ottawawards <- read_sf("data/Wards.shp")
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "white")
)
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Orléans"] <- "Orleans"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "West Carleton – March"] <- "West Carleton-March"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Stittsville"] <- "Stittsville-Kanata West"
ottawawards <- ottawawards %>%
left_join(count(listings,neighbourhood),c("WARD_NAME_"="neighbourhood"))
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "dark blue") +
ditch_the_axes
df_listing_sum <- listings %>%
group_by(neighbourhood, room_type) %>%
summarize(sum = n()) %>%
group_by(neighbourhood) %>%
mutate(total=sum(sum)) %>%
mutate(percent=total/nrow(listings))
df_listing_sum %>%
ggplot(aes(x=reorder(neighbourhood,total),y=sum,fill=room_type)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
p <- listings %>%
plot_mapbox(lat = ~latitude, lon = ~longitude,
split = ~room_type, size=2,
mode = 'scattermapbox', hoverinfo="price") %>%
layout(mapbox = list(zoom = 9,
center = list(lat = ~median(latitude),
lon = ~median(longitude)))) %>%
p
listings <- read.csv("data/listings-summarized.csv")
neighbourhoods <- read.csv("data/neighbourhoods.csv")
all_listings <-read.csv("data/listings.csv")
ottawawards <- read_sf("data/Wards.shp")
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "white")
)
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Orléans"] <- "Orleans"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "West Carleton – March"] <- "West Carleton-March"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Stittsville"] <- "Stittsville-Kanata West"
ottawawards <- ottawawards %>%
left_join(count(listings,neighbourhood),c("WARD_NAME_"="neighbourhood"))
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "dark blue") +
ditch_the_axes
df_listing_sum <- listings %>%
group_by(neighbourhood, room_type) %>%
summarize(sum = n()) %>%
group_by(neighbourhood) %>%
mutate(total=sum(sum)) %>%
mutate(percent=total/nrow(listings))
df_listing_sum %>%
ggplot(aes(x=reorder(neighbourhood,total),y=sum,fill=room_type)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
p <- listings %>%
plot_mapbox(lat = ~latitude, lon = ~longitude,
split = ~room_type, size=2,
mode = 'scattermapbox', hoverinfo="price") %>%
layout(mapbox = list(zoom = 9,
center = list(lat = ~median(latitude),
lon = ~median(longitude))))
p
temp <- read.csv("data/reviews.csv")
View(temp)
as.Date("2019-09-30")
as.Date("2019-09-30") > as.Date("2019-10-03")
as.Date("2019-09-30") > "2019-10-03"
as.Date("2019-09-30") > "2019-09-03"
cal <- read.csv("data/calendar.csv") %>%
filter(date < as.Date("2019-10-30"))
cal <- read.csv("data/calendar.csv") %>%
filter(as.Date(date) < as.Date("2019-10-30"))
View(cal)
cal <- read.csv("data/calendar.csv") %>%
filter(as.Date(date) < as.Date("2019-11-01"))
cal <- read.csv("data/calendar.csv") %>%
filter(as.Date(date) < as.Date("2019-11-01")) %>%
filter(avaliable =="t")
cal <- read.csv("data/calendar.csv") %>%
filter(as.Date(date) < as.Date("2019-11-01")) %>%
filter(available =="t")
cal <- read.csv("data/calendar.csv") %>%
filter(as.Date(date) < as.Date("2019-11-01")) %>%
filter(available =="f")
temp <- cal %>% count()
View(temp)
temp <- cal %>% count(listing_id)
review_data <- read.csv("data/reviews.csv")
View(review_data)
View(temp)
View(review_data)
reviews <- read.csv("data/reviews.csv") %>%
filter(as.Date(date) < as.Date("2018-01-01"))
View(reviews)
reviews <- read.csv("data/reviews.csv") %>%
filter(as.Date(date) > as.Date("2018-01-01"))
View(reviews)
rev <- count(listings_id)
rev <- count(listing_id)
rev <- reviews %>% count(listing_id)
View(rev)
View(all_listings)
View(all_listings)
# load libraries
library(dplyr)
library(readxl)
library(janitor)
library(ggplot2)
library(skimr)
library(stringr)
library(maps)
library(mapdata)
library(plotly)
library(sf)
library(ggthemes)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1IjoiYXJpa2IwIiwiYSI6ImNrM2V5djl2cDAwbzkzZG5sMG16ZndnbmYifQ.BfoEKQZ2gykEJvFmt1xe8Q')
listings <- read.csv("data/listings-summarized.csv")
neighbourhoods <- read.csv("data/neighbourhoods.csv")
all_listings <-read.csv("data/listings.csv")
ottawawards <- read_sf("data/Wards.shp")
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "white")
)
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Orléans"] <- "Orleans"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "West Carleton – March"] <- "West Carleton-March"
ottawawards$WARD_NAME_[ottawawards$WARD_NAME_ == "Stittsville"] <- "Stittsville-Kanata West"
ottawawards <- ottawawards %>%
left_join(count(listings,neighbourhood),c("WARD_NAME_"="neighbourhood"))
ottawawards %>% ggplot() +
geom_sf(aes(fill=n),color = "white") +
scale_fill_gradient(low = "light blue", high = "dark blue") +
ditch_the_axes
df_listing_sum <- listings %>%
group_by(neighbourhood, room_type) %>%
summarize(sum = n()) %>%
group_by(neighbourhood) %>%
mutate(total=sum(sum)) %>%
mutate(percent=total/nrow(listings))
df_listing_sum %>%
ggplot(aes(x=reorder(neighbourhood,total),y=sum,fill=room_type)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
p <- listings %>%
plot_mapbox(lat = ~latitude, lon = ~longitude,
split = ~room_type, size=2,
mode = 'scattermapbox', hoverinfo="price") %>%
layout(mapbox = list(zoom = 9,
center = list(lat = ~median(latitude),
lon = ~median(longitude))))
p
View(all_listings)
reviews <- read.csv("data/reviews.csv") %>%
filter(as.Date(date) > as.Date("2019-01-01"))
rev <- reviews %>% count(listing_id)
View(rev)
reviews <- read.csv("data/reviews.csv") %>%
filter(as.Date(date) > as.Date("2019-01-01"))
rev <- reviews %>% count(listing_id)
View(reviews)
View(df_listing_sum)
View(listings)
df_activity <- listings %>% filter(as.Date(last_review)>2018-12-31)# %>%
df_activity <- listings %>% filter(as.Date(last_review)> as.Date("2018-12-31"))# %>%
df_activity <- listings %>% filter(number_of_reviews == 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31"))# %>%
as.Date("2018-12-31")
df_activity <- listings %>% filter(vector.is.empty(last_review)) #%>%
df_activity <- listings %>% filter(is.null(last_review)) #%>%
View(df_activity)
df_activity <- listings %>% filter(!is.null(last_review)) #%>%
View(df_activity)
df_activity <- listings %>% filter(number_of_reviews == 0)
df_activity <- listings %>% filter(number_of_reviews != 0)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31"))# %>%
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) #%>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,room_type)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,reviews,room_type)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type)
View(listings)
df_amount_listings <- listings %>% unique(host_id)
df_amount_listings <- listings %>% unique()
df_amount_listings <- listings %>% unique(host_id)
df_amount_listings <- listings %>% distinct(host_id)
View(df_amount_listings)
df_amount_listings <- listings %>% distinct(host_id,calculated_host_listings_count)
View(df_amount_listings)
df_amount_listings <- listings %>% distinct(host_id,calculated_host_listings_count)%>% filter(calculated_host_listings_count > 2)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type) %>%
mutate(min_price_per_month = reviews_per_month * price * minimum_nights)
View(listings)
View(listings)
View(all_listings)
df_activity %>% mean(min_price_per_month)
mean(df_activity,min_price_per_month)
mean(df_activity[["min_price_per_month"]])
df_minimum_activity <- df_activity %>%
group_by(neighbourhood,room_type) %>%
summarise(average=mean(df_activity[["min_price_per_month"]]))
View(df_minimum_activity)
df_minimum_activity <- df_activity %>%
group_by(neighbourhood,room_type) %>%
summarise(average=mean("min_price_per_month"))
df_minimum_activity <- df_activity %>%
group_by(neighbourhood,room_type) %>%
summarise(average=mean(min_price_per_month))
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type) %>%
mutate(min_price_per_month = if_else(test = minimum_nights > 30 && reviews_per_month > 0.8,yes=price * minimum_nights / 30,no=reviews_per_month * price * minimum_nights))
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type) %>%
mutate(min_price_per_month = if_else(test = minimum_nights > 30 & reviews_per_month > 0.8,yes=price * minimum_nights / 30,no=reviews_per_month * price * minimum_nights))
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type) %>%
mutate(
min_price_per_month = if_else(
test = ((minimum_nights > 30) & (reviews_per_month > 0.8)),
yes=price * minimum_nights / 30,
no=reviews_per_month * price * minimum_nights
)
)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type) %>%
mutate(
min_price_per_month = if_else(
test = ((minimum_nights > 30)),
yes=price * minimum_nights / 30,
no=reviews_per_month * price * minimum_nights
)
)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type) %>%
mutate(
min_price_per_month = if_else(
((minimum_nights > 30) & (reviews_per_month > 0.8)),
price * minimum_nights / 30,
reviews_per_month * price * minimum_nights
)
)
df_activity <- listings %>% filter(number_of_reviews != 0) %>%
filter(as.Date(last_review) > as.Date("2018-12-31")) %>%
select(id,neighbourhood,minimum_nights,price,reviews_per_month,number_of_reviews,room_type) %>%
mutate(
min_price_per_month = if_else(
#((minimum_nights > 30) & (reviews_per_month > 0.8)),
minimum_nights * reviews_per_month > 30,
price * minimum_nights / 30,
reviews_per_month * price * minimum_nights
)
)
df_minimum_activity <- df_activity %>%
group_by(neighbourhood,room_type) %>%
summarise(average=mean(min_price_per_month))
View(df_minimum_activity)
View(df_activity)
View(df_minimum_activity)
df_minimum_activity %>% ggplot(aes(x=neighbourhood,y=average)) +
geom_bar(stat="identity") +
theme_minimal()
df_minimum_activity %>% ggplot(aes(x=neighbourhood,y=average)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% ggplot(aes(x=neighbourhood,y=room_type)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% ggplot(aes(x=neighbourhood,y=average)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% ggplot(aes(x=neighbourhood,y=average,fill=room_type)) +
geom_bar(stat="identity") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% ggplot(aes(x=neighbourhood,y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type="Entire home/apt") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Entire home/apt") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Hotel room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Private room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Shared room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Entire home/apt") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Hotel room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Private room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Shared room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
ggplot(aes(x=reorder(neighbourhood,average),y=average,color="red")) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
ggplot(aes(x=reorder(neighbourhood,average),y=average,color="red")) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Entire home/apt") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,color="red")) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
ggplot(aes(x=reorder(neighbourhood,average),y=average,fill="red")) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Entire home/apt") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill="blue")) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Hotel room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Hotel room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average),color="red") +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Private room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge",color="red") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Private room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge",color="blue") +
coord_flip() +
theme_minimal()
ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge",fill="blue") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% filter(room_type=="Private room") %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge",fill="blue") +
coord_flip() +
theme_minimal()
df_minimum_activity %>% ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge") +
coord_flip() +
theme_minimal()
generateGraphMinPrice("Entire home/apt","red")
generateGraphMinPrice <- function(name,colour) {
df_minimum_activity %>% filter(room_type==name) %>%
ggplot(aes(x=reorder(neighbourhood,average),y=average,fill=room_type)) +
geom_bar(stat="identity",position = "dodge",fill=colour) +
coord_flip() +
theme_minimal()
}
generateGraphMinPrice("Entire home/apt","red")
generateGraphMinPrice("Hotel room","green")
generateGraphMinPrice("Private room","teal")
generateGraphMinPrice("Entire home/apt","red")
generateGraphMinPrice("Hotel room","green")
generateGraphMinPrice("Private room","cyan")
generateGraphMinPrice("Shared room","blue")
ggarrange(a,b,c,d,ncol =2,nrow = 2,labels=c("Entire home/apt","Hotel room","Private room","Shared room"))
library(ggpubr)
ggarrange(a,b,c,d,ncol =2,nrow = 2,labels=c("Entire home/apt","Hotel room","Private room","Shared room"))
a <- generateGraphMinPrice("Entire home/apt","red")
b <- generateGraphMinPrice("Hotel room","green")
c <- generateGraphMinPrice("Private room","cyan")
d <- generateGraphMinPrice("Shared room","blue")
ggarrange(a,b,c,d,ncol =2,nrow = 2,labels=c("Entire home/apt","Hotel room","Private room","Shared room"))
ggarrange(a,b,c,d,ncol =2,nrow = 2,labels=c("Entire home/apt","Hotel room","Private room","Shared room"),common.legend = TRUE)
ggarrange(a,b,c,d,ncol =2,nrow = 2,labels=c("Entire home/apt","Hotel room","Private room","Shared room"),common.legend = TRUE,legend = bottom)
ggarrange(a,b,c,d,ncol =2,nrow = 2,labels=c("Entire home/apt","Hotel room","Private room","Shared room"),common.legend = TRUE,legend = "bottom")
ggarrange(a,b,c,d+rremove("x.text"),ncol =2,nrow = 2,labels=c("Entire home/apt","Hotel room","Private room","Shared room"),common.legend = TRUE,legend = "bottom")
install.packages(c("quantmod", "tabulizer", "tm", "wordcloud", "zoo"))
